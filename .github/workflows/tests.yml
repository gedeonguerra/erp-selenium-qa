name: üß™ QA - Testes Automatizados ERP

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Rodar testes diariamente √†s 9h UTC (6h Bras√≠lia)
    - cron: '0 9 * * *'
  workflow_dispatch: # Permitir execu√ß√£o manual

jobs:
  testes-producao:
    name: ‚úÖ Validar Casos de Produ√ß√£o
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v3
    
    - name: üü¢ Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: üì¶ Instalar depend√™ncias
      run: npm ci
    
    - name: üåê Setup Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
    
    - name: üß™ Executar Testes de Produ√ß√£o
      run: npm run test:producao
      continue-on-error: true
    
    - name: üìä Upload Relat√≥rio de Produ√ß√£o
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: relatorio-producao-node-${{ matrix.node-version }}
        path: reports/relatorio-producao.json
        retention-days: 30
    
    - name: üì∏ Upload Screenshots (se houver falhas)
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: screenshots-falhas-producao
        path: screenshots/
        retention-days: 7

  testes-novos:
    name: üÜï Executar Novos Casos de Teste
    runs-on: ubuntu-latest
    needs: testes-producao # Rodar ap√≥s testes de produ√ß√£o
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v3
    
    - name: üü¢ Setup Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: üì¶ Instalar depend√™ncias
      run: npm ci
    
    - name: üåê Setup Chrome
      uses: browser-actions/setup-chrome@latest
    
    - name: üß™ Executar Novos Casos de Teste
      run: npm run test:novos
      continue-on-error: true
    
    - name: üìä Upload Relat√≥rio Novos Casos
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: relatorio-novos-casos
        path: reports/relatorio-novos.json
        retention-days: 30

  analise-qualidade:
    name: üìà An√°lise de Qualidade
    runs-on: ubuntu-latest
    needs: [testes-producao, testes-novos]
    if: always()
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v3
    
    - name: üìä Download Relat√≥rios
      uses: actions/download-artifact@v3
      with:
        path: reports-consolidados/
    
    - name: üìà Gerar Resumo
      run: |
        echo "## üìä Resumo da Execu√ß√£o" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ‚úÖ Testes de Produ√ß√£o" >> $GITHUB_STEP_SUMMARY
        echo "- Node 18.x: Executado" >> $GITHUB_STEP_SUMMARY
        echo "- Node 20.x: Executado" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üÜï Novos Casos de Teste" >> $GITHUB_STEP_SUMMARY
        echo "- Status: Executado" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üìÑ Relat√≥rios dispon√≠veis nos artifacts da execu√ß√£o" >> $GITHUB_STEP_SUMMARY

  notificacao:
    name: üìß Notificar Resultados
    runs-on: ubuntu-latest
    needs: [testes-producao, testes-novos]
    if: always()
    
    steps:
    - name: ‚úÖ Testes Passaram
      if: needs.testes-producao.result == 'success' && needs.testes-novos.result == 'success'
      run: echo "‚úÖ Todos os testes passaram com sucesso!"
    
    - name: ‚ö†Ô∏è Testes com Falhas
      if: needs.testes-producao.result == 'failure' || needs.testes-novos.result == 'failure'
      run: |
        echo "‚ö†Ô∏è Alguns testes falharam. Verificar relat√≥rios."
        exit 1