name: üß™ QA - Testes Automatizados ERP

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Permitir execu√ß√£o manual

permissions:
  contents: read
  actions: write

jobs:
  testes-producao:
    name: ‚úÖ Validar Casos de Produ√ß√£o
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
      fail-fast: false # Continuar mesmo se um falhar
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: üü¢ Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: üì¶ Instalar depend√™ncias
      run: npm ci
    
    - name: üåê Setup Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        google-chrome --version
    
    - name: üß™ Executar Testes de Produ√ß√£o
      run: |
        export HEADLESS=true
        npm run test:producao || true
      continue-on-error: true
    
    - name: üìä Upload Relat√≥rio de Produ√ß√£o
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: relatorio-producao-node-${{ matrix.node-version }}
        path: reports/relatorio-producao.json
        retention-days: 30
        if-no-files-found: warn
    
    - name: üì∏ Upload Screenshots (se houver falhas)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-producao-node-${{ matrix.node-version }}
        path: screenshots/
        retention-days: 7
        if-no-files-found: ignore

  testes-novos:
    name: üÜï Executar Novos Casos de Teste
    runs-on: ubuntu-latest
    needs: testes-producao
    if: always() # Executar mesmo se testes-producao falhar
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: üü¢ Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: üì¶ Instalar depend√™ncias
      run: npm ci
    
    - name: üåê Setup Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: üß™ Executar Novos Casos de Teste
      run: |
        export HEADLESS=true
        npm run test:novos || true
      continue-on-error: true
    
    - name: üìä Upload Relat√≥rio Novos Casos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: relatorio-novos-casos
        path: reports/relatorio-novos.json
        retention-days: 30
        if-no-files-found: warn

  analise-qualidade:
    name: üìà An√°lise de Qualidade
    runs-on: ubuntu-latest
    needs: [testes-producao, testes-novos]
    if: always()
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: üìä Download Relat√≥rios
      uses: actions/download-artifact@v4
      with:
        path: reports-consolidados/
      continue-on-error: true
    
    - name: üìà Gerar Resumo
      run: |
        echo "## üìä Resumo da Execu√ß√£o" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ‚úÖ Testes de Produ√ß√£o" >> $GITHUB_STEP_SUMMARY
        echo "- Node 18.x: Executado" >> $GITHUB_STEP_SUMMARY
        echo "- Node 20.x: Executado" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üÜï Novos Casos de Teste" >> $GITHUB_STEP_SUMMARY
        echo "- Status: Executado" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üìÑ Relat√≥rios dispon√≠veis nos artifacts da execu√ß√£o" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó Links" >> $GITHUB_STEP_SUMMARY
        echo "- [Documenta√ß√£o Completa](https://github.com/${{ github.repository }}#readme)" >> $GITHUB_STEP_SUMMARY
        echo "- [Conhecimento em M√≥dulos ERP](https://github.com/${{ github.repository }}/blob/main/docs/CONHECIMENTO-ERP.md)" >> $GITHUB_STEP_SUMMARY

  notificacao:
    name: üìß Status Final
    runs-on: ubuntu-latest
    needs: [testes-producao, testes-novos]
    if: always()
    
    steps:
    - name: ‚úÖ Resultado da Execu√ß√£o
      run: |
        echo "üìä Status dos Jobs:"
        echo "- Testes Produ√ß√£o: ${{ needs.testes-producao.result }}"
        echo "- Testes Novos: ${{ needs.testes-novos.result }}"
        
        if [ "${{ needs.testes-producao.result }}" == "success" ] && [ "${{ needs.testes-novos.result }}" == "success" ]; then
          echo "‚úÖ Todos os testes executaram com sucesso!"
          exit 0
        else
          echo "‚ö†Ô∏è Alguns testes apresentaram problemas. Verificar logs acima."
          exit 0
        fi